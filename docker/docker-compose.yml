version: '3'
services:

  # proxy instance to be used in development mode with greenlight-dev
  proxy-dev:
    image: "abiosoft/caddy:no-stats"
    environment:
      TOB_API_URL: ${TOB_API_URL}
      TOB_APP_URL: ${TOB_APP_URL}
      WEB_BASE_HREF: ${WEB_BASE_HREF}
      WEB_HOST_NAME: ${WEB_HOST_NAME}
      WEB_HOST_PORT: ${WEB_HOST_PORT}
      WEB_HOST_TLS: ${WEB_HOST_TLS}
      BCSC_AGENT_HOST: ${BCSC_AGENT_HOST}
      BCSC_AGENT_PORT: ${BCSC_AGENT_PORT}
    depends_on:
      - bcsc-agent
    networks:
      - orgbook
      - vonx
    ports:
      - ${WEB_HTTP_PORT}:${WEB_HOST_PORT}
    volumes:
      - ../caddy/Caddyfile:/etc/Caddyfile
      - ../assets:/srv/assets
      - caddy-data:/root/.caddy
      - caddy-logs:/srv/logs

  # greenlight angular app running with hot-reload capabilities
  greenlight-dev:
    image: greenlight-dev
    environment:
      DEV_MODE: "false"
      NODE_ENV: "development"
      NPM_CONFIG_LOGLEVEL: "notice"
      NPM_RUN: "dev"
    depends_on:
      - proxy-dev
    networks:
      - orgbook
      - vonx
    ports:
      - 5050:5050
    volumes:
      - ../greenlight-demo/src:/opt/app-root/src/src

  # production-ready caddy instance, used to serve the angular app as well as acting as proxy
  caddy:
    image: greenlight
    environment:
      TOB_API_URL: ${TOB_API_URL}
      TOB_APP_URL: ${TOB_APP_URL}
      WEB_BASE_HREF: ${WEB_BASE_HREF}
      WEB_HOST_NAME: ${WEB_HOST_NAME}
      WEB_HOST_PORT: ${WEB_HOST_PORT}
      WEB_HOST_TLS: ${WEB_HOST_TLS}
      BCSC_AGENT_HOST: ${BCSC_AGENT_HOST}
      BCSC_AGENT_PORT: ${BCSC_AGENT_PORT}
    depends_on:
      - bcsc-agent
    networks:
      - orgbook
      - vonx
    ports:
      - ${WEB_HTTP_PORT}:${WEB_HOST_PORT}
    volumes:
      - ../caddy/Caddyfile:/etc/Caddyfile
      - caddy-data:/root/.caddy
      - caddy-logs:/srv/logs
    command:
      '/tmp/scripts/run'

  bcsc-agent:
    build:
      context: ..
      dockerfile: docker/agent/Dockerfile
    environment:
      DOCKERHOST: ${DOCKERHOST}
      APPLICATION_URL: ${APPLICATION_URL:-http://localhost:5000}
      ENDPOINT_URL: ${ENDPOINT_URL:-http://localhost:5000}
      CONFIG_ROOT: ../config/bcsc-agent
      ENVIRONMENT: ${ENVIRONMENT:-default}
      INDY_LEDGER_URL: ${LEDGER_URL:-http://localhost:9000}
      LOG_LEVEL: ${LOG_LEVEL}
      PYTHON_ENV: ${PYTHON_ENV:-development}
      TOB_API_URL: ${TOB_API_URL}
      TOB_APP_URL: ${TOB_APP_URL}
      POSTGRESQL_WALLET_HOST: ${POSTGRESQL_WALLET_HOST}
      POSTGRESQL_WALLET_PORT: ${POSTGRESQL_WALLET_PORT}
      POSTGRESQL_WALLET_USER: ${POSTGRESQL_USER}
      POSTGRESQL_WALLET_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRESQL_WALLET_ADMIN_PASSWORD: ${POSTGRESQL_ADMIN_PASSWORD}
      WALLET_ENCRYPTION_KEY: ${WALLET_ENCRYPTION_KEY}
      INDY_WALLET_TYPE: ${INDY_WALLET_TYPE}
      INDY_WALLET_SEED: ${BCSC_WALLET_SEED}
    networks:
      - orgbook
      - vonx
    depends_on:
      - agent-wallet-db
    volumes:
      - bcsc-agent-wallet:/home/indy/.indy_client/wallet


  agent-wallet-db:
    image: registry.access.redhat.com/rhscl/postgresql-10-rhel7:latest
    environment:
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_ADMIN_PASSWORD=${POSTGRESQL_ADMIN_PASSWORD}
    networks:
      - orgbook
    ports:
      - 5431:5432
    volumes:
      - agent-wallet-db:/var/lib/pgsql/data

volumes:
  caddy-data:
  caddy-logs:
  bcsc-agent-wallet:
  agent-wallet-db:

networks:
  vonx:
  orgbook:
    external:
      name: tob_tob
